.. _recipe-pmwiki:

PmWiki
======

`PmWiki`_ is a wiki-based system for collaborative creation and maintenance of websites.

Requirements
------------

*Version:*
	1.4.7 or >

Recipe
----------

The configuration uses a separated, reusable layout. It adds three files.

.. ngx::

	server {
		listen 80;
		server_name wiki.example.com;
		root /srv/www/pmwiki/example.com/wiki/public;

		index pmwiki.php;
	  
		location ~ ^/(cookbook|local|scripts|wiki.d|wikilib.d) {
			deny all;
		}
		   
		location / { 
			try_files $uri $uri/ @pmwiki; 
		} 

		location @pmwiki { 
			rewrite ^/(.*) /pmwiki.php?n=$1; 
		}

		## php configuration using unix sockets. 
		location ~ \.php$ {
			include /etc/nginx/fastcgi_params;
			fastcgi_pass unix:/run/php-fpm/php-fpm.sock;
		}

	 
		# cache configuration for most common files
		location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
			# Some basic cache-control for static files to be sent to the browser
			expires max;
			add_header Pragma public;
			add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		}
	 
		# drop common log errors
		location = /robots.txt { access_log off; log_not_found off; }
		location = /favicon.ico { access_log off; log_not_found off; }
		location ~ /\. { access_log off; log_not_found off; deny all; }
		location ~ ~$ { access_log off; log_not_found off; deny all; }
	}

Notes
-----

* I've used php-fpm in socket mode. Please, go here for more info: 
  http://www.php.net/manual/en/install.fpm.configuration.php#listen
* The distributed configuration is not a must. You can synthesize all of it into a
  single file. You will use the ability to re-use it, though.
